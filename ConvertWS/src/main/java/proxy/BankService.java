
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BankService", targetNamespace = "http://ws_package/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankService {


    /**
     * 
     * @param amount
     * @return
     *     returns double
     */
    @WebMethod(operationName = "ConvertToMAD")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ConvertToMAD", targetNamespace = "http://ws_package/", className = "proxy.ConvertToMAD")
    @ResponseWrapper(localName = "ConvertToMADResponse", targetNamespace = "http://ws_package/", className = "proxy.ConvertToMADResponse")
    @Action(input = "http://ws_package/BankService/ConvertToMADRequest", output = "http://ws_package/BankService/ConvertToMADResponse")
    public double convertToMAD(
        @WebParam(name = "amount", targetNamespace = "")
        double amount);

    /**
     * 
     * @return
     *     returns java.util.List<proxy.Account>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccounts", targetNamespace = "http://ws_package/", className = "proxy.GetAccounts")
    @ResponseWrapper(localName = "getAccountsResponse", targetNamespace = "http://ws_package/", className = "proxy.GetAccountsResponse")
    @Action(input = "http://ws_package/BankService/getAccountsRequest", output = "http://ws_package/BankService/getAccountsResponse")
    public List<Account> getAccounts();

    /**
     * 
     * @param code
     * @return
     *     returns proxy.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccount", targetNamespace = "http://ws_package/", className = "proxy.GetAccount")
    @ResponseWrapper(localName = "getAccountResponse", targetNamespace = "http://ws_package/", className = "proxy.GetAccountResponse")
    @Action(input = "http://ws_package/BankService/getAccountRequest", output = "http://ws_package/BankService/getAccountResponse")
    public Account getAccount(
        @WebParam(name = "code", targetNamespace = "")
        int code);

}
